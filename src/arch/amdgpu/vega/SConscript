# -*- mode:python -*-

# Copyright (c) 2021 Advanced Micro Devices, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import sys

Import('*')

if not env['CONF']['BUILD_GPU']:
    Return()

SimObject('VegaGPUTLB.py', sim_objects=['VegaPagetableWalker',
                                        'VegaGPUTLB',
                                        'VegaTLBCoalescer'])

Source('faults.cc')
Source('pagetable.cc')
Source('pagetable_walker.cc')
Source('tlb.cc')
Source('tlb_coalescer.cc')

DebugFlag('GPUPTWalker', 'Debug flag for GPU page table walker')

if env['CONF']['TARGET_GPU_ISA'] == 'vega':
    Source('gpu_decoder.cc')
    Source('insts/gpu_static_inst.cc')
    Source('insts/op_encodings.cc')
    Source('gpu_isa.cc')
    Source('gpu_registers.cc')

    Source('insts/sop2.cc')
    Source('insts/sopk.cc')
    Source('insts/sop1.cc')
    Source('insts/sopc.cc')
    Source('insts/sopp.cc')
    Source('insts/smem.cc')
    Source('insts/vop2.cc')
    Source('insts/vop1.cc')
    Source('insts/vopc.cc')
    Source('insts/vinterp.cc')
    Source('insts/vop3.cc')
    Source('insts/vop3_cmp.cc')
    Source('insts/ds.cc')
    Source('insts/mubuf.cc')
    Source('insts/mtbuf.cc')
    Source('insts/mimg.cc')
    Source('insts/exp.cc')
    Source('insts/flat.cc')
    Source('insts/vop3p.cc')
    Source('insts/vop3p_mai.cc')

    DebugFlag('VEGA', 'Debug flag for VEGA GPU ISA')
